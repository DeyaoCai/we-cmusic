<script role="json">
  export default {
    "component": true,
    "usingComponents": {
      "wrap": "../../wraps/wrap/wrap",
      "header": "../../components/header/header",
      "popup": "../../components/popup/popup",
      "songList": "../../components/songList/songList",
      "sheetList": "../../components/sheetList/sheetList",
      "scroll": "../../components/scroll/scroll"
    }
  }
</script>
<template>
  <wrap>

    <view class="func-list"  slot="header">
      <view bindtap="recommendSongs">每日推荐</view>
      <view bindtap="topPlaylist">歌单</view>
    </view>

    <view slot="content">
      <scroll-view scroll-y>
        <view slot="cont" class="discover-page">
          <songList class="comp-songList"></songList>
        </view>
      </scroll-view>
      <popup class="pop-conf-sheet" config="{{popConf}}">
        <view slot="cont" class="song-list-wrap">
          <view class="song-list-inner">
            <scroll-view scroll-y><sheetList class="comp-sheetList" showSongList="{{showSongList}}"></sheetList></scroll-view>
          </view>
          <view bindtap="hideSheetPop" class="close-btn">X</view>
        </view>
      </popup>

      <popup class="pop-conf" config="{{popConf}}">
        <view slot="cont" class="song-list-wrap">
          <view class="song-list-inner">
            <scroll-view scroll-y><songList class="comp-recommend-songList"></songList></scroll-view>
          </view>
            <view bindtap="hideRecPop" class="close-btn">X</view>
        </view>
      </popup>
    </view>
  </wrap>
</template>
<script>
  const cmusic = require("../../../http/http.js");
  Component({
    options: {
      multipleSlots: true
    },
    properties: {},
    data: {
      scrollConf: {
        derction: 'x',
        itemNum: {x:2, y:1},
        index: {x: 1, y:0},
        takeOneStepAtATime: true,
      },
      page1Scrollconf: { derction: 'y', },
      page2Scrollconf: { derction: 'y', },
      popConf: {stop: true},

    },
    methods: {
      showSongList(ev){
        const conf = ev.currentTarget.dataset.conf;
        cmusic.playlistDetail({id: conf.id})(res => {
          const tracks = res.data.playlist.tracks;
          const _t = this.selectComponent(".comp-recommend-songList");
          _t.setList(tracks);
          const _pop = this.selectComponent(".pop-conf");
          _pop.showPop(_pop);

        })
      },
      showSheetPop(){
        const _pop = this.selectComponent(".pop-conf-sheet");
        _pop.showPop(_pop);
      },
      hideSheetPop(){
        const _pop = this.selectComponent(".pop-conf-sheet");
        _pop.hidePop(_pop);
      },
      showRecPop(){
        const _pop = this.selectComponent(".pop-conf");
        _pop.showPop(_pop);
      },
      hideRecPop(){
        const _pop = this.selectComponent(".pop-conf");
        _pop.hidePop(_pop);
      },
      topPlaylist(){
        cmusic.topPlaylist()(res => {
          const _pop = this.selectComponent(".comp-sheetList");
          _pop.setList(res.data.playlists);
          this.showSheetPop();
        })
      },
      recommendSongs() {
        cmusic.recommendSongs()(res => {
          const _t = this.selectComponent(".comp-recommend-songList");
          _t.setList(res.data.recommend);
          this.showRecPop();
        })
      },
      personalizedNewsong(){
        cmusic.personalizedNewsong()(res => {
          const _t = this.selectComponent(".comp-songList");
          _t.setList(res.data.result);
        })
      },
    },
    attached: function (options) {
      this.personalizedNewsong();
      // 非常不优雅的写法
      this.setData({showSongList:ev => this.showSongList(ev)});
    },
    onReady: function () {

    },
    onShow: function () {

    },
    onHide: function () {

    },
    onUnload: function () {

    },
    onPullDownRefresh: function () {

    },
    onReachBottom: function () {

    },
    onShareAppMessage: function () {

    }
  })
</script>
<style>
  .song-list-wrap{
    height: 100%;
    display: flex;
    box-orient:vertical;
    flex-direction:column;
    background-color: #fff;
    border-top: 1px solid #f8f8f8;
  }
  .song-list-inner{
    flex: 1 1 0;
    position: relative;
  }
  scroll-view{
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
  }
  .discover-page{
    font-size: 1rem;
  }
  .my-page{
    font-size: 1rem;
  }
  .func-list{
    display: flex;
    padding: .2rem;
    flex: 0 0 auto;
  }
  .func-list>view{
    margin: .2rem;
    flex: 1;
    text-align: center;
    font-size: .7rem;
    padding: .6rem;
    background-color:  #418dcb;
    color: #fff;
    border-radius: .2rem;
  }
  .func-list>view:active{
    opacity: .9;
  }
  .close-btn{
    position: absolute;
    top: 2rem;
    left: 2rem;
    width: 2rem;
    height: 2rem;
    line-height: 2rem;
    color: #fff;
    text-align: center;
    border-radius: .5rem;
    background-color: #418dcb;
    font-size: .6rem;
  }
</style>
